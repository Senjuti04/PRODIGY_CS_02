import cv2
import numpy as np

def encrypt_image(image_path, key):
    
    image = cv2.imread(image_path)
    if image is None:
        raise ValueError("Image not found. Check the path.")
    
    encrypted_image = image.copy()
    rows, cols, channels = encrypted_image.shape
    np.random.seed(key)  # Set seed for reproducibility
    
    for i in range(rows):
        for j in range(cols):
            for k in range(channels):
                encrypted_image[i, j, k] = (encrypted_image[i, j, k] + np.random.randint(0, 256)) % 256
    
    cv2.imwrite("encrypted_image.png", encrypted_image)
    return "encrypted_image.png"

def decrypt_image(encrypted_image_path, key):
    
    encrypted_image = cv2.imread(encrypted_image_path)
    if encrypted_image is None:
        raise ValueError("Encrypted image not found.")
    
    decrypted_image = encrypted_image.copy()
    rows, cols, channels = decrypted_image.shape
    np.random.seed(key)
    
    for i in range(rows):
        for j in range(cols):
            for k in range(channels):
                decrypted_image[i, j, k] = (decrypted_image[i, j, k] - np.random.randint(0, 256)) % 256
    
    cv2.imwrite("decrypted_image.png", decrypted_image)
    return "decrypted_image.png"

if __name__ == "__main__":
    image_path = input("Enter image path: ")
    key = int(input("Enter encryption key (integer): "))
    
    enc_path = encrypt_image(image_path, key)
    print(f"Encrypted image saved as {enc_path}")
    
    dec_path = decrypt_image(enc_path, key)
    print(f"Decrypted image saved as {dec_path}")
